class Solution {
    public List<String> removeInvalidParentheses(String s) {
        HashSet<String>set=new HashSet<>();
        List<String> result=new ArrayList<>();
        Queue<String>q=new LinkedList<>();
        q.add(s);set.add(s);
        boolean flag=false;
        while(!q.isEmpty() && !flag){
            int size=q.size();
            for(int i=0;i<size;i++){
                String curr=q.poll();
                if(isValid(curr)){
                    flag=true;
                    result.add(curr);
                }else{
                    if(!flag){
                        //make babies of it
                        for(int j=0;j<curr.length();j++){
                            char c=curr.charAt(j);
                            if(Character.isAlphabetic(c))continue;
                            String child=curr.substring(0,j)+curr.substring(j+1);
                            if(!set.contains(child)){
                                q.add(child);set.add(child);
                            }
                        }
                    }
                }
            }
        }
        return result;

    }
    private boolean isValid(String s){
        int count=0;
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if(c=='('){
                count++;
            }else if(c==')'){
                if(count==0)return false;
                count--;
            }
        }
        return count==0;
    }
}