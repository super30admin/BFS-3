class Solution {
    public List<String> removeInvalidParentheses(String s) {
        List<String> result = new ArrayList<>();
        if(s==null) return result;
        HashSet<String> set = new HashSet<>();
        Queue<String> q = new LinkedList<>();
        boolean found  = false;
        
        q.add(s);
        set.add(s);
        
        while(!q.isEmpty())
        {
            s = q.poll();
            if(isValid(s))
            {
                result.add(s);
                found = true;
            }
            
            if(!found)
            {
                for(int i = 0;i<s.length();i++)
                {
                    if(Character.isLetter(s.charAt(i))) continue;
                    String t = s.substring(0,i) + s.substring(i+1);
                    if(!set.contains(t))
                    {
                        set.add(t);
                        q.add(t);
                        
                    }
                }
            }
            
        }
        
        return result;
    }
    
    private boolean isValid(String s)
    {
        int count =0;
        for(int i =0;i<s.length();i++)
        {
            char c = s.charAt(i);
            if(c=='(')  count++;
            else if(c==')')
            {
                if(count==0) return false;
                count--;
            }
        }
        return count==0;
    }
}
